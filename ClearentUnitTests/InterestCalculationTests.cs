using Microsoft.VisualStudio.TestTools.UnitTesting; using System.Collections.Generic; using ClearentChallenge; using System.Diagnostics;  namespace ClearentTests {     [TestClass]     public class ClearentUnitTests     {         Person person;         Wallet wallet;          [TestInitialize]         public void Setup()         {             person = new Person();             wallet = new Wallet();         }          [TestMethod]         public void TestCase1()         {             var mc = new MasterCard(100m);             var visa = new Visa(100m);             var disc = new Discover(100m);              wallet.Cards = new List<Card> { mc, visa, disc };             person.Wallets = new List<Wallet> { wallet };              Assert.AreEqual(16, person.CalculateInterest());              Assert.AreEqual(10, visa.CalculateInterest());             Assert.AreEqual(5, mc.CalculateInterest());             Assert.AreEqual(1, disc.CalculateInterest());         }          [TestMethod]         public void TestCase2()         {             wallet.Cards = new List<Card> { new Visa(100m), new Discover(100m) };             var wallet2 = new Wallet();             wallet2.Cards = new List<Card> { new MasterCard(100m) };             person.Wallets = new List<Wallet> { wallet, wallet2 };              Assert.AreEqual(16, person.CalculateInterest());             Assert.AreEqual(11, wallet.CalculateInterest());             Assert.AreEqual(5, wallet2.CalculateInterest());         }          [TestMethod]         public void TestCase3()         {             wallet.Cards = new List<Card> { new Visa(100m), new MasterCard(100m) };             person.Wallets = new List<Wallet> { wallet };              var wallet2 = new Wallet();             wallet2.Cards = new List<Card> { new Visa(100m), new MasterCard(100m) };             var person2 = new Person();             person2.Wallets = new List<Wallet> { wallet2 };              Assert.AreEqual(15, person.CalculateInterest());             Assert.AreEqual(15, person2.CalculateInterest());             Assert.AreEqual(15, wallet.CalculateInterest());             Assert.AreEqual(15, wallet2.CalculateInterest());         }     } } 