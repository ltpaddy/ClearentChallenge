using System;  namespace ClearentChallenge {      public abstract class Card : IInterestCalc     {         public virtual float InterestRate         {             get { return 0; }         }          public decimal Balance { get; set; }           public Card(decimal balance)         {             this.Balance = balance;         }          public decimal CalculateInterest()         {             return ((decimal)InterestRate) * Balance;         }     }       public class MasterCard : Card     {         public override float InterestRate         {             get { return 0.05f; }         }          public MasterCard(decimal balance) : base(balance) { }      }      public class Visa : Card     {         public override float InterestRate         {             get { return 0.1f; }         }          public Visa(decimal balance) : base(balance) { }     }      public class Discover : Card     {         public override float InterestRate         {             get { return 0.01f; }         }          public Discover(decimal balance) : base(balance) { }     } }